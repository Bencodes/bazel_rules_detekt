name: CI

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  buildifier:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v2.3.1

      - name: "Download Buildifier"
        run: |
          curl -LO "https://github.com/bazelbuild/buildtools/releases/download/3.3.0/buildifier"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv buildifier "${GITHUB_WORKSPACE}/bin/buildifier"
          chmod +x "${GITHUB_WORKSPACE}/bin/buildifier"

      - name: "Lint Starlark files"
        run: $GITHUB_WORKSPACE/bin/buildifier -mode check -lint warn -r .

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v2.3.1

      - name: "Install JDK"
        uses: actions/setup-java@v1.4.3
        with:
          java-version: "11.0.5"

      - name: "Download Bazelisk"
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.5.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: "Configure Bazel"
        run: cp .github/workflows/.bazelrc .

      - name: "Configure cache"
        uses: actions/cache@v2.0.0
        with:
          path: .cache
          key: ${{ runner.os }}-bazel-${{ hashFiles('WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: "Fetch"
        run: bazel fetch //detekt/wrapper:bin

      - name: "Build"
        run: bazel build //detekt/wrapper:bin

      - name: "Unit tests"
        run: bazel test //detekt/wrapper:tests

      - name: "Analysis tests"
        run: bazel test //tests/analysis:tests

      - name: "Integration tests"
        run: bash tests/integration/suite.sh
